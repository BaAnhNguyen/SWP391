const nodemailer = require("nodemailer");

const transporter = nodemailer.createTransport({
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_APP_PASSWORD,
  },
});

// H√†m build b·∫£ng c√°c t√∫i m√°u
function buildAssignedUnitsTable(units) {
  return `
    <table border="1" cellpadding="6" style="border-collapse: collapse; margin: 12px 0; font-size: 15px;">
      <thead style="background: #f2f2f2;">
        <tr>
          <th>STT</th>
          <th>Nh√≥m m√°u</th>
          <th>Th√†nh ph·∫ßn</th>
          <th>Th·ªÉ t√≠ch (ml)</th>
          <th>H·∫°n s·ª≠ d·ª•ng</th>
        </tr>
      </thead>
      <tbody>
        ${units
          .map(
            (u, i) => `
          <tr>
            <td>${i + 1}</td>
            <td>${u.BloodType}</td>
            <td>${u.ComponentType}</td>
            <td>${u.Volume || "-"}</td>
            <td>${
              u.DateExpired
                ? new Date(u.DateExpired).toLocaleDateString("vi-VN")
                : "-"
            }</td>
          </tr>
        `
          )
          .join("")}
      </tbody>
    </table>
  `;
}

// H√†m t·∫°o template email nh·∫≠n m√°u
function getAppointmentMail(memberName, appointmentDate, units) {
  const formattedDate = appointmentDate
    ? new Date(appointmentDate).toLocaleString("vi-VN", {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "2-digit",
        minute: "2-digit",
      })
    : "(ch∆∞a x√°c ƒë·ªãnh)";
  return {
    subject: "ü©∏ Th√¥ng b√°o nh·∫≠n m√°u ‚Äì ƒê∆°n y√™u c·∫ßu c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ph√¢n ph·ªëi",
    html: `
      <div style="font-family: Arial,sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <h2 style="color: #d32f2f;">Th√¥ng b√°o nh·∫≠n m√°u th√†nh c√¥ng</h2>
        <p>Ch√†o <b>${memberName}</b>,</p>
        <p>Y√™u c·∫ßu nh·∫≠n m√°u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n v√† ph√¢n ph·ªëi th√†nh c√¥ng.</p>
        <p><b>Ng√†y h·∫πn nh·∫≠n m√°u:</b> <span style="color: #1976d2;">${formattedDate}</span></p>
        <p><b>Th√¥ng tin t√∫i m√°u ƒë∆∞·ª£c ph√¢n ph·ªëi:</b></p>
        ${buildAssignedUnitsTable(units)}
        <p>Vui l√≤ng mang gi·∫•y t·ªù t√πy th√¢n v√† ƒë·∫øn ƒë√∫ng gi·ªù ƒë·ªÉ ƒë∆∞·ª£c ph·ª•c v·ª• t·ªët nh·∫•t!</p>
        <hr>
        <p style="color: #888; font-size: 13px;">
          M·ªçi th·∫Øc m·∫Øc vui l√≤ng li√™n h·ªá: <b>support@blooddonation.com</b>
        </p>
      </div>
    `,
  };
}

// H√†m g·ª≠i mail
async function sendMail(to, subject, html) {
  const mailOptions = {
    from: `"Trung t√¢m Hi·∫øn M√°u" <${process.env.EMAIL_USER}>`,
    to,
    subject,
    html,
  };
  await transporter.sendMail(mailOptions);
}

module.exports = { getAppointmentMail, sendMail, buildAssignedUnitsTable };
